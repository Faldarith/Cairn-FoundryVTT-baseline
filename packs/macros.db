{"name":"Generate character","permission":{"default":0,"tw8WBuj1heybSIqW":3},"type":"script","flags":{"core":{"sourceId":"Macro.3zRg0cgONbT8eqmY"}},"scope":"global","command":"function formResult(input, output) {\n  return `<tr><td style='text-align:left'><b>${input}: </b></td><td>${output}</td></tr>`;\n}\n\nasync function Create() {\n  let allroll = new Roll(\"3d6[bloodmoon]+3d6[cold]+3d6[force]\").roll();\n\n  let strresults = allroll.dice[0].results;\n  let dexresults = allroll.dice[1].results;\n  let wilresults = allroll.dice[2].results;\n\n  let strength = strresults[0].result + strresults[1].result + strresults[2].result;\n  let dexterity = dexresults[0].result + dexresults[1].result + dexresults[2].result;\n  let will = wilresults[0].result + wilresults[1].result + wilresults[2].result;\n\n  let hp = new Roll(\"1d6\").roll().total;\n  let gold = new Roll(\"3d6\").roll().total;\n  let age = new Roll(\"2d10+10\").roll().total;\n  // name\n  let maleNamesTable = game.tables.entities.find(t => t.name === \"Male Names\");\n  let femaleNamesTable = game.tables.entities.find(t => t.name === \"Female Names\");\n  let genderRoll = new Roll(\"1d6\").roll().total % 2;\n  let firstName = \"\";\n  if (genderRoll == 1) {\n    firstName += maleNamesTable.roll().results[0].text;\n  } else {\n    firstName += femaleNamesTable.roll().results[0].text;\n  }\n  const surname = game.tables.entities.find(t => t.name === \"Surnames\").roll().results[0].text;\n  const characterName = firstName + \" \" + surname;\n  // biography\n  const face = game.tables.entities.find(t => t.name === \"Face\").roll().results[0].text.toLowerCase();\n  const hair = game.tables.entities.find(t => t.name === \"Hair\").roll().results[0].text.toLowerCase();\n  const skin = game.tables.entities.find(t => t.name === \"Skin\").roll().results[0].text.toLowerCase();\n  const physique = game.tables.entities.find(t => t.name === \"Physique\").roll().results[0].text.toLowerCase();\n  const misfortune = game.tables.entities.find(t => t.name === \"Misfortunes\").roll().results[0].text.toLowerCase();\n  const reputation = game.tables.entities.find(t => t.name === \"Reputation\").roll().results[0].text.toLowerCase();\n  const speech = game.tables.entities.find(t => t.name === \"Speech\").roll().results[0].text.toLowerCase();\n  const vice = game.tables.entities.find(t => t.name === \"Vice\").roll().results[0].text.toLowerCase();\n  const virtue = game.tables.entities.find(t => t.name === \"Virtue\").roll().results[0].text.toLowerCase();\n  const clothing = game.tables.entities.find(t => t.name === \"Clothing\").roll().results[0].text.toLowerCase();\n  const characterBackground = game.tables.entities.find(t => t.name === \"Background\").roll().results[0].text;\n  let biography = `I have a <strong>${physique}</strong> physique, <strong>${skin}</strong> skin, <strong>${hair}</strong> hair, and a <strong>${face}</strong> face. I speak in a <strong>${speech}</strong> manner and wear <strong>${clothing}</strong> clothing. I am <strong>${vice}</strong> yet <strong>${virtue}</strong>, and I am generally regarded as <strong>${reputation}</strong>. I have had the misfortune of being <strong>${misfortune}</strong>. I am <strong>${age}</strong> years old.`;\n  let actorData = {\n    name: characterName,\n    background: characterBackground,\n    biography: biography,\n    hp: { value: hp, max: hp },\n    gold: gold,\n    \"abilities\": {\n      \"STR\": {\n        \"value\": strength,\n        \"max\": strength\n      },\n      \"DEX\": {\n        \"value\": dexterity,\n        \"max\": dexterity\n      },\n      \"WIL\": {\n        \"value\": will,\n        \"max\": will\n      }\n    },\n  };\n  let items = [];\n\n  const data = duplicate(game.items.getName(\"Rations\"));\n  data.data.quantity = 3;\n  items.push(data);\n\n  const torch = game.items.find(i => i.name === \"Torch\");\n  items.push(torch.data);\n\n  function checkAndGetItemFromSubTable(name) {\n    if (SUB_TABLE_NAMES.includes(name)) {\n      let subResults = game.tables.getName(name).roll().results;\n      // console.log(\"sub: \" + subResults[0].text);\n      return checkAndGetItemFromSubTable(subResults[0].text);\n    } else {\n      return game.items.find(i => i.name === name);\n    }\n  }\n\n  const TABLE_NAMES = [\"Trinkets\", \"Weapons\", \"Helmets and Shields\", \"Armor\", \"Expeditionary Gear\", \"Bonus Item\"];\n  const SUB_TABLE_NAMES = [\"Weapons\", \"Simple Weapons\", \"One-Handed Melee\", \"Ranged Weapons\", \"Two-Handed Melee\", \"Tools\", \"Trinkets\", \"Expeditionary Gear\", \"Armor\", \"Spellbooks\"]\n\n  let itemInsert = \"\";\n\n  TABLE_NAMES.forEach(tableName => {\n    // console.log(\"table: \" + tableName);\n    let results = game.tables.getName(tableName).roll().results;\n    // console.log(\"main: \" + results[0].text);\n\n    let item = undefined;\n\n    item = checkAndGetItemFromSubTable(results[0].text);\n\n    if (item) {\n      let itemClicker = \"@Item[\" + item.data.name + \"]\";\n      itemInsert += formResult(tableName, itemClicker);\n      items.push(item.data);\n    } else {\n      itemInsert += formResult(tableName, `None`);\n    }\n  });\n\n  let actor = await Actor.create({\n    name: characterName,\n    type: \"character\",\n    img: \"icons/svg/mystery-man.svg\",\n    sort: 12000,\n    data: actorData,\n    token: {},\n    items: items,\n    flags: {}\n  });\n\n  function postCharToChat() {\n\n    let statInsert = formResult(\"Strength\", strength) +\n      formResult(\"Dexterity\", dexterity) +\n      formResult(\"Will\", will) + `</table><table style=\"width:22%\">` +\n      formResult(\"HP\", hp) +\n      formResult(\"Gold\", gold) + \"</table>\";\n\n    let statsMessage = `<table style=\"width:32%\">${statInsert}</table>`;\n    let gearMessage = `<table>${itemInsert}</table>`;\n    let bioMessage = biography;\n\n    let charInsert = \"@Actor[\" + characterName + \"]\";\n\n    let chatData = {\n      user: game.user._id,\n      speaker: ChatMessage.getSpeaker(),\n      content: `<h2>${charInsert}</h2>` + statsMessage + gearMessage + bioMessage\n    };\n    ChatMessage.create(chatData, {});\n  }\n\n  if (game.dice3d) {\n    game.dice3d.showForRoll(allroll).then(happened => {\n      postCharToChat();\n\n    });\n  } else {\n    postCharToChat();\n  }\n\n};\nCreate();","author":"tw8WBuj1heybSIqW","img":"icons/svg/mystery-man.svg","actorIds":[],"_id":"As87yQUroF4FpQp7"}
